<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cumulonimbus</name>
    </assembly>
    <members>
        <member name="T:Cumulonimbus.PatchHelpers">
            <summary>
            Helper class for patching assemblies
            </summary>
        </member>
        <member name="F:Cumulonimbus.PatchHelpers.PROCESSED_TAG">
            <summary>
            Assembly marker to avoid multiple weavings of the same assembly
            </summary>
        </member>
        <member name="M:Cumulonimbus.PatchHelpers.PatchAll(Mono.Cecil.ModuleDefinition[])">
            <summary>
            Finds all methods annotated with <see cref="T:Cumulonimbus.MethodPatchAttribute"/> and
            executes them on the methods they're targetting in the given modules.
            </summary>
            <param name="modules"></param>
        </member>
        <member name="M:Cumulonimbus.PatchHelpers.PatchMethod(Mono.Cecil.MethodDefinition,System.Reflection.MethodInfo)">
            <summary>
            Patches a <see cref="T:Mono.Cecil.MethodDefinition"/> by invoking a patch method
            </summary>
            <param name="definition">Definition to patch</param>
            <param name="patch">The <see cref="T:System.Reflection.MethodInfo"/> to invoke for patching the definition</param>
        </member>
        <member name="M:Cumulonimbus.PatchHelpers.GetMethodInfo(System.Delegate)">
            <summary>
            Returns the MethodInfo of any given delegate or function reference
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="T:Cumulonimbus.MethodPatchAttribute">
            <summary>
            Attribute that can be applied to a method in order to turn it into a Harmony-style transpiler-esque patch for <see cref="T:Mono.Cecil.MethodDefinition"/>
            </summary>
            <param name="typeName">The target type for the patch</param>
            <param name="methodName">The method to apply the patch to</param>
            <param name="methodSignature">Optional method signature types</param>
        </member>
        <member name="M:Cumulonimbus.MethodPatchAttribute.#ctor(System.String,System.String,System.String[])">
            <summary>
            Attribute that can be applied to a method in order to turn it into a Harmony-style transpiler-esque patch for <see cref="T:Mono.Cecil.MethodDefinition"/>
            </summary>
            <param name="typeName">The target type for the patch</param>
            <param name="methodName">The method to apply the patch to</param>
            <param name="methodSignature">Optional method signature types</param>
        </member>
        <member name="M:Cumulonimbus.Program.Main(System.String[])">
            <summary>
            Main entry point, uses System.CommandLine for CLI
            </summary>
            <param name="args">Command line arguments</param>
            <returns></returns>
        </member>
        <member name="M:Cumulonimbus.Program.Execute(System.String,System.Boolean)">
            <summary>
            Executes the patcher and re-weaves the targetted assemblies
            </summary>
            <param name="path">The path of the Resonite Headless folder</param>
            <param name="noConfirm">Whether to run without user input</param>
        </member>
        <member name="M:Cumulonimbus.Program.GetFiles(System.String)">
            <summary>
            Gets all of the extra libraries that need to be copied into the destination.
            </summary>
            <param name="dest"></param>
            <returns></returns>
        </member>
        <member name="M:Cumulonimbus.Program.Msg(System.String)">
            <summary>
            Prints a message to console
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Cumulonimbus.Program.Warn(System.String)">
            <summary>
            Prints a warning to console
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Cumulonimbus.Program.Error(System.String)">
            <summary>
            Prints an error to console
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Cumulonimbus.Program.Initialize_Patch(System.Collections.Generic.IEnumerable{Mono.Cecil.Cil.Instruction},Mono.Cecil.ModuleDefinition,Mono.Cecil.Cil.ILProcessor)">
            <summary>
            Patches the "Initialize" method in "FrooxEngine.LibraryInitializer" to remove the Ssl3 protocol as it's unsupported.
            </summary>
            <param name="instructions"></param>
            <param name="module"></param>
            <param name="processor"></param>
            <returns></returns>
        </member>
        <member name="M:Cumulonimbus.Program.Process_Patch(System.Collections.Generic.IEnumerable{Mono.Cecil.Cil.Instruction},Mono.Cecil.ModuleDefinition,Mono.Cecil.Cil.ILProcessor)">
            <summary>
            Patches the "Process" method in "FrooxEngine.Weaver.AssemblyPostProcessor" to 
            </summary>
            <param name="instructions"></param>
            <param name="module"></param>
            <param name="processor"></param>
            <returns></returns>
        </member>
    </members>
</doc>
